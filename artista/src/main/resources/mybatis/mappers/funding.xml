<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
							"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mulcam.artista.dao.FundingDAO">

	<!-- fundingAppNo 구하기 -->
	<select id="maxfundingAppNo" resultType="integer">
		<![CDATA[
			select max(fundingNo) from fundingApp
		]]>
	</select>
	<!-- 작가가 펀딩 신청 -->
	<insert id="insertApply" parameterType="funding" >
		<![CDATA[
			insert into fundingapp(fundingNo, artistNo, id, projTitle, projIntro, projBudget, projArtist, targetFunding, fundingDate, startDate, endDate, thumbImg, applyStatus, getplace, getplace2, applydate)
			values(#{fundingNo}, (select artistNo from artist where id=#{id}), #{id}, #{projTitle}, #{projIntro}, #{projBudget}, #{projArtist}, #{targetFunding}, #{fundingDate}, #{startDate}, #{endDate}, #{thumbImg}, 0, #{getplace}, #{getplace2}, sysdate())
		]]>
	</insert>
	<!-- 작가가 펀딩 수정요청 -->
	<insert id="modifyApply" parameterType="funding" >
		<![CDATA[
			insert into fundingapp(fundingNo, artistNo, id, projTitle, projIntro, projBudget, projArtist, targetFunding, fundingDate, startDate, endDate, thumbImg, applyStatus, getplace, getplace2, applydate)
			values(#{fundingNo}, (select artistNo from artist where id=#{id}), #{id}, #{projTitle}, #{projIntro}, #{projBudget}, #{projArtist}, #{targetFunding}, #{fundingDate}, #{startDate}, #{endDate}, #{thumbImg}, 2, #{getplace}, #{getplace2}, sysdate())
		]]>
	</insert>
	
	
	<select id="queryFunding" parameterType="string" resultType="Funding">
		<![CDATA[
			select * from funding where id =#{id}
		]]>
	</select>
	
	<select id="queryMyFunding" parameterType="string" resultType="Funding">
		<![CDATA[
			select * from funding where artistNo = (select artistNo from artist where id = #{id})
		]]>
	</select>
	<select id="queryappfunding" parameterType="string" resultType="Funding">
		<![CDATA[
			select * from fundingapp where id =#{id}
		]]>
	</select>
		<update id="updateapplyStatus" parameterType="Funding" >
		<![CDATA[
			update fundingapp set applyStatus=1 where id=#{id}
		]]>
	</update>
	
	
	<!-- fundingNo 구하기 -->
	<select id="maxfundingNo" resultType="integer">
		<![CDATA[
			select max(fundingNo) from funding
		]]>
	</select>
	
	<!-- 관리자 펀딩 insert -->
	<insert id="insertfunding" parameterType="funding" >
		<![CDATA[
			insert into funding(fundingNo, artistNo, artistName, projTitle, projIntro, projBudget, projArtist, targetFunding, fundingDate, startDate, endDate, thumbImg, sumAmount, fundingState, getplace, getplace2)
			values(#{fundingNo}, (select artistNo from artist where id=#{id}), (select artistName from artist where id=#{id}), #{projTitle}, #{projIntro}, #{projBudget}, #{projArtist}, #{targetFunding},
			#{fundingDate}, #{startDate}, #{endDate}, #{thumbImg}, 0, (case when timestampdiff(day, now(), startDate)>0 then 1 else 
		(case when timestampdiff(day, now(), endDate)>0 then 2 else 3 end) end), #{getplace}, #{getplace2}); 

		]]>
	</insert>
	<select id="queryuc" resultType="Funding">
		<![CDATA[
			select * from funding where fundingState=1
		]]>
	</select>
	<select id="queryov" resultType="Funding">
		<![CDATA[
			select * from funding where fundingState=2
		]]>
	</select>
	<select id="querytm" resultType="Funding">
		<![CDATA[
			select * from funding where fundingState=3
		]]>
	</select>
	
	<select id="queryovdetail" parameterType="int" resultType="Funding">
		<![CDATA[
			select * from funding where fundingNo=#{fundingNo}
		]]>
	</select>
	<select id="queryucdetail" parameterType="int" resultType="Funding">
		<![CDATA[
			select * from funding where fundingNo=#{fundingNo}
		]]>
	</select>
	<select id="querytmdetail" parameterType="int" resultType="Funding">
		<![CDATA[
			select * from funding where fundingNo=#{fundingNo}
		]]>
	</select>
	
	<!-- 펀딩 후원 insert -->
	<insert id="insertfundingspon" parameterType="map" >
		<![CDATA[
			insert into fundingSpon(sponsorNo, id, fundingNo, sponsorAmount, email, sponDate)
			values(null, #{id}, #{fundingNo}, #{sponsorAmount}, #{email},now())
		]]>
	</insert>
	<select id="querySponCount" parameterType="int" resultType="int">
		<![CDATA[
			select count(*) from fundingSpon where fundingNo=#{fundingNo}
		]]>
	</select>
	<select id="queryFundingNo" resultType="Funding">
		<![CDATA[
			select * from funding where fundingNo=#{fundingNo}
		]]>
	</select>
	<select  id="checkAlarm" parameterType="map" resultType="boolean">
		<![CDATA[
			select EXISTS (select * from alarm 
				where fundingNo= #{fundingNo} and id=#{id} limit 1) as success
		 ]]>
	</select>
	<insert id="insertAlarm" parameterType="map" >
		<![CDATA[
			insert into alarm(id, fundingNo, projTitle, fundingMsg, readSign, startDate)
			values(#{id}, #{fundingNo}, (select projTitle from funding where fundingNo=#{fundingNo}), "이 시작할 예정입니다", 0, (select startDate from funding where fundingNo=#{fundingNo}))
		]]>
	</insert>
	
	<delete id="deleteAlarm" parameterType="map" >
		<![CDATA[
			delete from alarm where id=#{id} and fundingNo=#{fundingNo}
		]]>
	</delete>
	<select  id="queryAlarmlist" parameterType="string" resultType="Funding">
		<![CDATA[
			select * from alarm where id =#{id}
		 ]]>
	</select>
	
	
	<!-- 관리자 펀딩 신청 내역 가져오기(등록 신청 및 수정 신청) -->
	<select id="fundingAppList" resultType="Funding">
		<![CDATA[
			select * from fundingApp where applyStatus=0 or applyStatus=2
		 ]]>
	</select>
	<select id="fundingExpectList" resultType="Funding">
		<![CDATA[
			select * from funding where fundingState=1
		 ]]>
	</select>
	<select id="fundingNowList" resultType="Funding">
		<![CDATA[
			select * from funding where fundingState=2
		 ]]>
	</select>
	<select id="fundingEndedList" resultType="Funding">
		<![CDATA[
			select * from funding where fundingState=3
		 ]]>
	</select>
	<select id="querytfundingApp" parameterType="int" resultType="Funding">
		<![CDATA[
			select * from fundingapp where fundingNo=#{fundingNo}
		]]>
	</select>
	<delete id="deleteFundingApply" parameterType="int" >
		<![CDATA[
			delete from fundingapp where fundingNo=#{applyNo}
		]]>
	</delete>

	
	<!-- 펀딩신청 허락 update -->
	<select id="updateFundingApplyEnroll" parameterType="int">
		<![CDATA[
			update fundingapp set applyStatus=4 where fundingNo=#{fundingNo}
		]]>
	</select>
	
	<!-- 펀딩신청 거절 update -->
	<select id="updateFundingApplyRefuse" parameterType="map">
		<![CDATA[
			update fundingapp set applyStatus=applyStatus+1, refusedContents=#{refusedContents} where fundingNo=#{fundingNo}
		]]>
	</select>
	<select id="queryCount" parameterType="int" resultType="int">
		<![CDATA[
			select count(*) from alarm where fundingNo=#{fundingNo}
		]]>
	</select>
</mapper>

<!-- 

펀딩 등록/수정
create table fundingApp(
	fundingNo int(10) not null auto_increment,
	fundingOriginNo int(10),
    artistNo int(10),
    id varchar(100) not null,
    projTitle varchar(100) not null,
    projIntro varchar(255) not null,
    projBudget varchar(255) not null,
    projArtist varchar(255) not null,
    targetFunding int(100) not null,
    fundingDate varchar(255),
    startDate timestamp,
    endDate timestamp,
    thumbImg varchar(100) not null,
    applyStatus int(10),
    refusedContents varchar(500),
    getplace varchar(500) not null,
    getplace2 varchar(255),
    applydate date,
    primary key(fundingNo)
);

펀딩 예정, 진행, 종료
create table funding(
	fundingNo int(10) not null,
    artistNo int(10),
	artistName varchar(100),
    projTitle varchar(100) not null,
    projIntro varchar(255) not null,
    projBudget varchar(255) not null,
    projArtist varchar(255) not null,
    targetFunding int(100) not null,
    fundingDate varchar(255),
    startDate timestamp,
    endDate timestamp,
    thumbImg varchar(100) not null,
	sumAmount int(10),
    fundingState int(10),
    getplace varchar(500) not null,
    getplace2 varchar(255),
    primary key(fundingNo)
);

펀딩 결제
create table fundingSpon(
	sponsorNo int(10) not null auto_increment,
    id varchar(100) not null,
    fundingNo int(10) not null,
    sponsorAmount int(10) not null,
    email varchar(100) not null,
    primary key(sponsorNo)
);

알람
create table alarm(
	id varchar(100) not null,
    fundingNo int(100) not null,
    projTitle varchar(100) not null,
    fundingMsg varchar(100) not null,
    readSign boolean,
    startDate timestamp
);

CREATE EVENT IF NOT EXISTS updateFundingState
    ON SCHEDULE
           EVERY 1 DAY
    ON COMPLETION NOT PRESERVE
    ENABLE
    COMMENT 'fundingState 업데이트'
    DO 
    	update funding set fundingState=(case when timestampdiff(hour, now(), startDate)>0 then 1 else 
		(case when timestampdiff(hour, now(), endDate)>0 then 2 else 3 end) end);

 -->
 
 